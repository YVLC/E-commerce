@page "/Login"

@using DataEntities
@using Store.Services
@inject Store.Services.AuthenticationService AuthenticationService
@inject IConfiguration Configuration
@attribute [StreamRendering(true)]
@inject NavigationManager NavigationManager

<div class="card">
    <h4 class="card-header">Login</h4>
    <div class="card-body">
        <EditForm Model="@model" OnSubmit="OnValidSubmit" FormName="login">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Email</label>
                <InputText @bind-Value="model.Email" class="form-control" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText @bind-Value="model.Password" type="password" class="form-control" />
            </div>
            <button disabled="@loading" class="btn btn-primary">
                @if (loading) 
                {
                    <span class="spinner-border spinner-border-sm mr-1"></span>
                }
                Login
            </button>
            <NavLink href="account/register" class="btn btn-link">Register</NavLink>
        </EditForm>
    </div>
</div>

@code {
    private Models.Login model = new Models.Login();
    private bool loading;

    private async void OnValidSubmit()
    {

        loading = true;
        try
        {
            var a = await AuthenticationService.Login(model);
            if(a ==true)
                NavigationManager.NavigateTo("/");
            else
            {
               
            }
        }
        catch (Exception ex)
        {
            loading = false;
            StateHasChanged();
        }
    }
}