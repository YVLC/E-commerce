@page "/products"
@using DataEntities
@using Microsoft.AspNetCore.OutputCaching
@using Store.Services
@inject ProductService ProductService
@inject BasketService BasketService
@inject IConfiguration Configuration
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]
@using static Microsoft.AspNetCore.Components.Web.RenderMode
@rendermode InteractiveServer

<h1>Products</h1>

<p>Here are some of our amazing outdoor products that you can purchase.</p>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Image</th>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td><img height="80" width="80" src="https://raw.githubusercontent.com/MicrosoftDocs/mslearn-dotnet-cloudnative/main/dotnet-docker/Products/wwwroot/images/@product.ImageUrl" /></td>
                    <td>@product.Name</td>
                    <td>@product.Description</td>
                    <td>@product.Price</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => AddToBasket(product)"> Add to Basket</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Product>? products;

    private string imagePrefix = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);
        imagePrefix = Configuration["ImagePrefix"];
        products = await ProductService.GetProducts();
    }

    // Method to add the selected product to the basket
    async Task AddToBasket(Product product)
    {
        // Call the BasketService to add the product to the basket
        BasketService.AddToBasket(product);
        Console.WriteLine($"{product.Name} added to basket.");
    }
}